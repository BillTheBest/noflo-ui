INPORT=LoadData.DB:DB
INPORT=Dispatch.IN:IN
INPORT=FindRuntimes.CONTEXT:CONTEXT
OUTPORT=MergeContext.OUT:CONTEXT

# Route requests
'open' -> ROUTES Dispatch(routers/GroupRouter)
Dispatch ROUTE -> START Loading(ui/CreateLoadingContext)
Loading OUT -> IN MergeContext(core/Merge)
Dispatch MISSED -> IN ShowErrors(core/Output)

# Send all projects to the UI
'' -> START CreateRuntimesCtx(ui/CreateContext)
CreateRuntimesCtx OUT -> CONTEXT SetRuntimes(ui/SetToContext)
'runtimes' -> KEY SetRuntimes
LoadData(ui/LoadRuntimeData) RUNTIMES -> VALUE SetRuntimes CONTEXT -> IN MergeContext

# Add compatible runtimes to already-populated contexts
LoadData RUNTIMES -> RUNTIMES FindRuntimes(ui/FindRuntimes)
FindRuntimes CONTEXT -> CONTEXT HoldConnection(ui/HoldRuntimeConnection)

# Build runtime context
LoadData RUNTIMES -> RUNTIMES PopulateRuntimeData(ui/PopulateRuntimeData)
Dispatch OUT[0] -> IN PopulateRuntimeData
PopulateRuntimeData OUT -> CONTEXT HoldConnection(ui/HoldRuntimeConnection)

# Connection handling, shared between contexts
HoldConnection CONTEXT -> CONTEXT Collect(ui/CollectRemoteNodes)
Collect RUNTIME -> RUNTIME GetSource(runtime/GetSource)
Collect COMPONENT -> NAME GetSource
GetSource SOURCE -> COMPONENT Collect
GetSource ERROR -> ERROR Collect
Collect CONTEXT -> IN MergeContext
Collect ERROR -> ERROR ErrorToCtx(ui/ErrorToContext) OUT -> IN MergeContext

# Send local data to runtime
Collect CONTEXT -> CONTEXT SendContext(ui/ContextToRuntime)

# Connection handling
HoldConnection CONNECT -> CONTEXT ConnectRuntime(ui/ConnectionToContext)
ConnectRuntime RUNTIME -> RUNTIME HoldConnection
ConnectRuntime RUNTIME -> RUNTIME ListComponents(ui/ListComponents)
ListComponents OUT -> IN MergeContext
ConnectRuntime CONTEXT -> CONTEXT Collect

LoadData ERROR -> IN ShowErrors
